name: Insighter deployment
on:
  push:
    branches:
      - dev
jobs:
    lint:
      runs-on: ubuntu-latest
      steps:
        - name: Get the code from repo
          uses: actions/checkout@v4
        - name: Install pipx
          run: pip install pipx
        - name: Install poetry
          run: pipx install poetry
        - name: Install dependencies
          run: poetry install --no-root
        - name: Run lint check
          run: poetry run ruff check --fix


#    #Билд и заливка докер имиджа в регестри
#    build:
#      runs-on: ubuntu-latest
#      steps:
#        - name: Checkout
#          uses: actions/checkout@v4
#        - name: Set up QEMU
#          uses: docker/setup-qemu-action@v3
#        - name: Set up Docker Buildx
#          uses: docker/setup-buildx-action@v3
#        - name: Login to Docker Hub
#          uses: docker/login-action@v3
#          with:
#            username: ${{secrets.DOCKERHUB_USERNAME}}
#            password: ${{secrets.DOCKERHUB_PASSWORD}}
#        - name: Build and push
#          uses: docker/build-push-action@v5
#          with:
#            context: .
#            push: true
#            tags: artemprod/insighter_bot:latest
#
#    #    pull и деплой на серевере
#    deploy_docker:
#      needs: build
#      runs-on: ubuntu-latest
#      steps:
#        - name: Connect to server
#          uses: appleboy/ssh-action@master
#          with:
#            host: 194.135.20.145
#            username: root
#            password: ${{secrets.MAIN_SERVER_PASSWORD}}
#            script: |
#              mkdir insighter_deploy_temp
#              cd insighter_deploy_temp
#
#              echo OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} >> .env
#              echo TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} >> .env
#              echo MONGO_DB_DOCKER_HOST=${{ secrets.MONGO_DB_DOCKER_HOST }} >> .env
#              echo MONGO_DB_LOCAL_HOST=${{ secrets.MONGO_DB_LOCAL_HOST }} >> .env
#              echo MONGO_DB_DOCKER_PORT=${{ secrets.MONGO_DB_DOCKER_PORT }} >> .env
#              echo MONGO_DB_LOCAL_PORT=${{ secrets.MONGO_DB_LOCAL_PORT }} >> .env
#              echo DATABASE=${{ secrets.DATABASE }} >> .env
#              echo REDIS_MAIN_BOT_DOCKER_HOST=${{ secrets.REDIS_MAIN_BOT_DOCKER_HOST }} >> .env
#              echo REDIS_MAIN_BOT_DOCKER_PORT=${{ secrets.REDIS_MAIN_BOT_DOCKER_PORT }} >> .env
#              echo REDIS_MAIN_BOT_LOCAL_HOST=${{ secrets.REDIS_MAIN_BOT_LOCAL_HOST }} >> .env
#              echo REDIS_MAIN_BOT_LOCAL_PORT=${{ secrets.REDIS_MAIN_BOT_LOCAL_PORT }} >> .env
#              echo PROGRESS_BAR_SERVER_URL=${{ secrets.PROGRESS_BAR_SERVER_URL }} >> .env
#              echo DOCKER_TELEGRAM_SERVER=${{ secrets.DOCKER_TELEGRAM_SERVER }} >> .env
#              echo DOCKER_TELEGRAM_SERVER_OYSIDE_ONE_LOCATION=${{ secrets.DOCKER_TELEGRAM_SERVER_OYSIDE_ONE_LOCATION }} >> .env
#              echo SYSTEM=${{ secrets.SYSTEM }} >> .env
#              echo REMOTE_SERVER_HOST=${{ secrets.REMOTE_SERVER_HOST }} >> .env
#              echo REMOTE_SERVER_USER_NAME=${{ secrets.REMOTE_SERVER_USER_NAME }} >> .env
#              echo REMOTE_SERVER_PASSWORD=${{ secrets.REMOTE_SERVER_PASSWORD }} >> .env
#              echo VIDEO_FORMATS=${{ env.VIDEO_FORMATS }} >> .env
#              echo AUDIO_FORMATS=${{ env.AUDIO_FORMATS }} >> .env
#              echo TXT_FORMAT=${{ env.TXT_FORMAT }} >> .env
#              echo PDF_FORMAT=${{ env.PDF_FORMAT }} >> .env
#              echo MODEL_VERSION=${{ env.MODEL_VERSION }} >> .env
#              echo CONTEXT_LENGTH=${{ env.CONTEXT_LENGTH }} >> .env
#              echo MODEL_TEMPERATURE=${{ env.MODEL_TEMPERATURE }} >> .env
#              echo MAX_RETURN_TOKENS=${{ env.MAX_RETURN_TOKENS }} >> .env
#              echo WHISPER_MODEL_VERSION=${{ env.WHISPER_MODEL_VERSION }} >> .env
#              echo WHISPER_LANGUAGE=${{ env.WHISPER_LANGUAGE }} >> .env
#              echo WHISPER_MODEL_TEMPERATURE=${{ env.WHISPER_MODEL_TEMPERATURE }} >> .env
#              echo YOOKASSA_SECRET_KEY=${{ secrets.YOOKASSA_SECRET_KEY }} >> .env
#              echo SHOP_ID=${{ secrets.SHOP_ID }} >> .env
#              echo PAYMENTS_PROVIDER_TOKEN_TEST=${{ secrets.PAYMENTS_PROVIDER_TOKEN_TEST }} >> .env
#              echo PAYMENTS_PROVIDER_TOKEN=${{ secrets.PAYMENTS_PROVIDER_TOKEN }} >> .env
#              echo LOGER_BOT_TOKEN=${{ secrets.LOGER_BOT_TOKEN }} >> .env
#              echo LOGTAIL_INSIGTER_SOURCE=${{ secrets.LOGTAIL_INSIGTER_SOURCE }} >> .env
#              echo TELEGRAM_CHAT_IDS=${{ secrets.TELEGRAM_CHAT_IDS }} >> .env
#
#              docker pull docker.io/artemprod/insighter_bot:latest
#              docker run -d --env-file .env --name insighter_ai-insighter_bot-1 docker.io/artemprod/insighter_bot:latest
#
#              cd ..
#              rm -r insighter_deploy_temp
#  #Название работы
#  build_docker:
#    #На какрой платформе будет запуск
#    runs-on: ubuntu-latest
#    #Шаг джобы
#    steps:
#      - name: Print to console
#        #Команда для операционной системы которую надо выполнить
#        run: echo Hello Actions
#      - name: Print a few lines
#        run: |
#          echo first line
#          echo second line
#
#
#
#
